name: On release created
permissions:
  actions: write
  packages: write
  contents: read

on:
  release: 
     types: [published]
  workflow_dispatch:

env:
  namespace: micros

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    steps:
      - name: get release artifacts for deployment, picks data from latest release
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          regex: true
          file: ".*\\.yaml"
          target: "cluster/"

      - uses: azure/setup-kubectl@v3
      - uses: azure/setup-helm@v4.2.0

      - name: Create/Verify `.kube` directory
        run: mkdir -p ~/.kube/

      - name: Create kubectl config
        run: |
          cat << EOF > ~/.kube/config
          ${{ secrets.KUBECONFIG }}
          EOF
 
      - name: Create namespace
        run: |
          kubectl create ns ${{ env.namespace }} || echo "El namespace ya existe"

      - name: Create pull secret
        run: |
          kubectl create secret docker-registry pullsecret \
          -n ${{ env.namespace }} \
          --docker-server=docker.io \
          --docker-username=${{ secrets.DOCKER_USERNAME }} \
          --docker-password=${{ secrets.DOCKER_PASSWORD }}

      - name: Set up ingress
        run: |
          helm repo add kong https://charts.konghq.com
          helm repo update
          helm upgrade --install kong kong/kong \
          --namespace ${{ env.namespace }} --create-namespace

      - name: Wait for Kong to be ready
        run: |
          kubectl wait --for=condition=available --timeout=120s deployment/kong-kong -n ${{ env.namespace }}

      - name: Deploy manifests
        run: |
          kubectl apply -f ${{ github.workspace }}/cluster/ -l deploy=yes