name: On PR merged
permissions:
  actions: write
  packages: write
  contents: read

on:
  push:
    branches: ["main"]
    paths:
    - 'service1/**'
    - 'service2/**'
  workflow_dispatch:

env:
  services: '["service1", "service2"]'
  parallel: 2

jobs:
  parameters:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.capture.outputs.services }}
      parallel: ${{ steps.capture.outputs.parallel }}
    steps:
      - name: save workflow parameters
        id: capture
        run: |
          echo "services=${{ env.services }}" >> $GITHUB_OUTPUT
          echo "parallel=${{ env.parallel }}" >> $GITHUB_OUTPUT
  
  run_tests:
    uses: ./.github/workflows/run_tests.yaml
    needs: parameters
    strategy:
      matrix:
        micro: ${{ fromJson(needs.parameters.outputs.services) }}
      max-parallel: ${{ fromJson(needs.parameters.outputs.parallel) }}
    with:
      microservicePath: ${{ matrix.micro }}

  compute_tag_version:
    runs-on: ubuntu-latest
    needs: 
      - run_tests
    outputs:
      tag_version: ${{ env.GitVersion_SemVer }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.1.11
        with:
          versionSpec: '6.0.x'

      - name: Determine Version
        id: gitversion 
        uses: gittools/actions/gitversion/execute@v3.1.11

  create_sbom:
    uses: ./.github/workflows/create_sbom.yaml
    needs: 
      - compute_tag_version
      - parameters
    strategy:
      matrix:
        micro: ${{ fromJson(needs.parameters.outputs.services) }}
      max-parallel: ${{ fromJson(needs.parameters.outputs.parallel) }}
    with:
      tag: ${{ needs.compute_tag_version.outputs.tag_version }}
      microservicePath: ${{ matrix.micro }}

  create_containers:
    uses: ./.github/workflows/create_container.yaml
    needs:
      - create_sbom
      - compute_tag_version
      - parameters
    strategy:
      matrix:
        micro: ${{ fromJson(needs.parameters.outputs.services) }}
      max-parallel: ${{ fromJson(needs.parameters.outputs.parallel) }}
    with:
      environment: prod
      tag: ${{ needs.compute_tag_version.outputs.tag_version }}
      microservicePath: ${{ matrix.micro }}
      dockerfileName: Dockerfile
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
  
  create_release:
    runs-on: ubuntu-latest
    needs: 
      - compute_tag_version
      - create_containers
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: 'main'
      - name: Replace tokens
        uses: cschleiden/replace-tokens@v1.0
        with:
          files: '["${{ github.workspace }}/deployment-automation/*.yaml"]'
        env: 
          docker.repo1: ${{ fromJson(env.services)[0] }}
          docker.repo2: ${{ fromJson(env.services)[1] }}
          namespace: micros
          environment: micros
          app.name: microservices-app
          tag: ${{ needs.compute_tag_version.outputs.tag_version }}
      - name: Create a relase
        uses: softprops/action-gh-release@v2
        with:
          token: "${{ secrets.EXTENDED_ACCESSTOKEN }}"
          tag_name: ${{ needs.compute_tag_version.outputs.tag_version }}
          generate_release_notes: true
          files: |
            ${{ github.workspace }}/deployment-automation/service1.yaml
            ${{ github.workspace }}/deployment-automation/service2.yaml